name: Build Master

on:
  push:
    branches: [ master ]

jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@master
        with:
          firstParent: false
          failOnWarnings: true

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name : GITHUB CONTEXT
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101

    - name: Start building Commit
      run: echo ${{ github.event.head_commit.message }}

    - name: Build
      run: dotnet build ./src/KafkaFlow.sln -c Release

    - name: UnitTest
      run: dotnet test src/KafkaFlow.UnitTests/KafkaFlow.UnitTests.csproj -c Release

    - name: IntegrationTest
      run: |
        make init_broker
        dotnet test src/KafkaFlow.IntegrationTests/KafkaFlow.IntegrationTests.csproj -c Release
        make shutdown_broker

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.event.head_commit.message, 'feat') || startsWith(github.event.head_commit.message, 'fix')

    steps:
    - uses: actions/checkout@v2

    - name: Set Patch Bump
      if: startsWith(github.event.head_commit.message, 'fix')
      run: echo "::set-env name=DEFAULT_BUMP::patch"

    - name: Set Minor Bump
      if: startsWith(github.event.head_commit.message, 'feat')
      run: echo "::set-env name=DEFAULT_BUMP::minor"

    - name: Bump version and push tag
      id: tagging
      uses: anothrNick/github-tag-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        INITIAL_VERSION: 1.3.0

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101

    - name: Pack
      run: dotnet pack ./src/KafkaFlow.sln -c Release /p:Version=${{ steps.tagging.outputs.new_tag }} -o ./drop

    - name: Publish
      run: dotnet nuget push ./drop/**/*.nupkg -k ${{ secrets.NUGET_PUBLISH_KEY }} -s https://api.nuget.org/v3/index.json --skip-duplicate

    - name: Print Version
      run: echo ${{ steps.tagging.outputs.new_tag }}
